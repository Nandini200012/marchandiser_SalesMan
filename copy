import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_barcode_scanner/flutter_barcode_scanner.dart';
import 'package:marchandise/provider/provider_cart.dart';
import 'package:marchandise/screens/marchandiser_screens/marchendiser_bottomnav.dart';
import 'package:marchandise/utils/constants.dart';
import 'package:provider/provider.dart';
import 'package:badges/badges.dart' as badge;

class AddProductListViewScreen extends StatefulWidget {
  const AddProductListViewScreen({super.key});

  @override
  State<AddProductListViewScreen> createState() =>
      _AddProductListViewScreenState();
}

TextEditingController _searchController = TextEditingController();

class _AddProductListViewScreenState extends State<AddProductListViewScreen> {
  @override
  Widget build(BuildContext context) {
    var height = MediaQuery.of(context).size.height;
    return Scaffold(
      // resizeToAvoidBottomInset: tru,
      body: SafeArea(
        child: SingleChildScrollView(
          child: Column(
            children: [
              Container(
                // color: Colors.blue,
                child: Column(
                  children: [
                    Row(
                      children: [
                        IconButton(
                            onPressed: () {
                              Navigator.of(context).pushReplacement(
                                  MaterialPageRoute(
                                      builder: (context) =>
                                          MarchendiserBottomNavigation()));
                            },
                            icon: Icon(Icons.arrow_back)),
                        const SizedBox(
                          width: 10,
                        ),
                        Text("Add Items")
                      ],
                    ),
                    const SizedBox(height: 10),
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 8.0),
                      child: Row(
                        children: [
                          Expanded(
                            // flex: 1,
                            child: SizedBox(
                              height: 51,
                              child: TextFormField(
                                controller: _searchController,
                                decoration: InputDecoration(
                                  labelText: 'Search',
                                  border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                  suffixIcon: Icon(Icons.search),
                                  filled: true,
                                  fillColor: Colors.white,
                                ),
                              ),
                            ),
                          ),
                          IconButton(
                            icon: Icon(
                              Icons.qr_code_rounded,
                              size: 52,
                              color: Constants.appColor,
                            ),
                            onPressed: () {
                              scanQrCode();
                            },
                          )
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              Container(
                //  color: Colors.amber,
                width: double.infinity,
                child: Column(
                  children: [
                    Container(
                      height: 100,
                      child: ListView.builder(
                        shrinkWrap: true,
                        itemCount: 9,
                        scrollDirection: Axis.horizontal,
                        itemBuilder: (context, index) {
                          return Container(
                            // width: 150, // Set a fixed width or adjust as needed
                            // color: Colors.blue,
                            child: Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                children: [
                                  Container(
                                    height: 52,
                                    width: 52,
                                    decoration: BoxDecoration(
                                        color: Colors.lightBlue,
                                        borderRadius: BorderRadius.circular(8)),
                                    child: Center(
                                      child: Text("P $index"),
                                    ),
                                  ),
                                  // CircleAvatar(
                                  //   radius: 30,
                                  //   child: Center(
                                  //     child: Text("Image"),
                                  //   ),
                                  // ),
                                  SizedBox(height: 5),
                                  Text("Product $index")
                                ],
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                  ],
                ),
              ),
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Align(
                    alignment: Alignment.topLeft,
                    child: Text("Top Sellers",
                        style: TextStyle(
                            fontWeight: FontWeight.w800, color: Colors.black))),
              ),
              Consumer<ShopList>(
                builder: (context, shopList, child) {
                  return ListView.builder(
                              shrinkWrap: true,
                              // itemBuilder: (_, index) => Divider(
                              //   thickness: 2,
                              // ),
                              itemBuilder: (context, index) {
                                String name =shopList .items[index].name;
                                String firstLetter = name.isNotEmpty ? name[0] : '';
                                return Column(
                                  children: [
                                    Card(
                                      color: Colors.grey.shade200,
                                      child: ListTile(
                                        leading: CircleAvatar(
                                          child: Text(
                                            firstLetter,
                                            style: TextStyle(fontSize: 22),
                                          ),
                                          radius: 25,
                                        ),
                                        title: Text(
                                          context.read<ShopList>().items[index].name,
                                          style: TextStyle(
                                              fontSize: 18, fontWeight: FontWeight.w500),
                                        ),
                                        subtitle: Text(
                                          context
                                              .read<ShopList>()
                                              .items[index]
                                              .productId
                                              .toString(),
                                          style: TextStyle(fontSize: 18, color: Colors.grey),
                                        ),
                                        trailing: Container(
                                          width: 110,
                                          decoration: BoxDecoration(
                                              border: Border.all(color: Constants.appColor),
                                              // color: Colors.black.withOpacity(0.5),
                                              borderRadius: BorderRadius.circular(8)),
                                          child: Row(
                                            children: [
                                              IconButton(
                                                  color: Constants.appColor,
                                                  onPressed: () {
                                                    context.read<ShopList>().addToCart(
                                                        context.read<ShopList>().items[index]);
                                                    print(context.read<ShopList>().cartItems);
                                                  },
                                                  icon: Icon(
                                                    Icons.add_circle,
                                                    size: 30,
                                                    color: Constants.appColor,
                                                  )),
                                              //item count
                                              Text(
                                                '${context.watch<ShopList>().items[index].count}',
                                                style: TextStyle(
                                                  fontSize: 18,
                                                ),
                                              ),
                                              IconButton(
                                                  color: Colors.blue.shade900,
                                                  onPressed:
                                                      // conditionally enable/disable button
                                                      context
                                                                  .watch<ShopList>()
                                                                  .items[index]
                                                                  .count ==
                                                              0
                                                          ? null
                                                          : () {
                                                              context
                                                                  .read<ShopList>()
                                                                  .removeFromCart(context
                                                                      .read<ShopList>()
                                                                      .items[index]);
                                                              print(context
                                                                  .read<ShopList>()
                                                                  .cartItems);
                                                            },
                                                  icon: Icon(
                                                    Icons.remove_circle,
                                                    size: 30,
                                                  )),
                                            ],
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                );
                              },
                              // itemCount: 5,
                              itemCount: context.read<ShopList>().itemCount,
                            );
                },
              ),
            ],
          ),
        ),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
      floatingActionButton:  Padding(
        padding: const EdgeInsets.symmetric(horizontal:8.0),
        child: Row(
          children: [
            Expanded(
              child: SizedBox(
                width: double.infinity,
                child: Container(
                  height: 52,
                  width: double.infinity,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    gradient: const LinearGradient(
                      colors: [
                        Color.fromARGB(255, 5, 92, 163),
                        Color.fromARGB(255, 5, 92, 163),
                      ],
                      begin: Alignment.centerLeft,
                      end: Alignment.centerRight,
                    ),
                  ),
                  child: ElevatedButton(
                    onPressed: () {},
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.transparent,
                      elevation: 0,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        const Text(
                          "Cart",
                          style: TextStyle(
                            color: Colors.white,
                            fontSize: 18,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                        SizedBox(
                          width: 15,
                        ),
                        context.read<ShopList>().cartCount == 0
                            ? Icon(
                                CupertinoIcons.cart,
                                size: 30,
                                color: Colors.white,
                              )
                            : Stack(
                                children: [
                                  Icon(
                                    CupertinoIcons.cart,
                                    color: Colors.white,
                                    size: 30,
                                  ),
                                  Positioned(
                                    child: CircleAvatar(
                                      radius: 8,
                                      backgroundColor: Colors.red,
                                      child: Text(
                                          '${context.watch<ShopList>().cartCount}',
                                          style: TextStyle(
                                            fontSize: 10,
                                            fontWeight: FontWeight.w600,
                                          )),
                                    ),
                                    left: 15,
                                    top: 0,
                                    bottom: 15,
                                    // right: ,
                                  ),
                                ],
                              ),
                        // Icon(
                        //   Icons.shopping_cart_checkout,
                        //   color: Colors.white,
                        // )
                      ],
                    ),
                  ),
                ),
              ),
            ),
            SizedBox(
              width: 10,
            ),
            Expanded(
              child: SizedBox(
                width: double.infinity,
                child: Container(
                  height: 52,
                  width: double.infinity,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10),
                    gradient: const LinearGradient(
                      colors: [
                        Color.fromARGB(255, 5, 92, 163),
                        Color.fromARGB(255, 5, 92, 163),
                      ],
                      begin: Alignment.centerLeft,
                      end: Alignment.centerRight,
                    ),
                  ),
                  child: ElevatedButton(
                    onPressed: () {},
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.transparent,
                      elevation: 0,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        const Text(
                          "Send Request",
                          style: TextStyle(
                            color: Colors.white,
                            fontSize: 18,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  void scanQrCode() async {
    try {
      var qrCode = await FlutterBarcodeScanner.scanBarcode(
        "#ff6666",
        "Cancel",
        true,
        ScanMode.QR,
      );
      if (mounted) {
        // isButtonDisabled = true;
        if (qrCode != "-1") {
          setState(() {
            _searchController.text = qrCode;
          });
        } else {}
      }

      print("QR Code Result :>>> $qrCode");
    } on PlatformException catch (e) {
      if (e.code == -1) {
      } else {}
    }
  }
}
